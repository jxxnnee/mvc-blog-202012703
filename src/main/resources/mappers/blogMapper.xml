<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="iducs.spring.blog202012703.mapper.blogMapper">


	<insert id="create">
		insert into blog(title, content, filepath, blogger, reg_date_time)
		values(#{title}, #{content}, #{filepath}, #{blogger}, #{regDateTime})
	</insert>
	
	<select id="read" resultType="iducs.spring.blog202012703.domain.Blog">
		select * 
		from blog 
		where id = #{id}
	</select>
	
	<select id="readTotalRowCount" resultType="int"> 
		select count(*) 
		from blog 
	</select>
	
	<select id="readTotalRowCountByKeyword" resultType="int"> 
		select count(*) 
		from blog
		where title LIKE CONCAT('%', #{keyword}, '%')
	</select>
	
	<select id="readList" resultType="iducs.spring.blog202012703.domain.Blog">
		<![CDATA[
		select *
		from (
			select @rownum:=@rownum+1 as rnum, id, title, content, filepath, blogger, reg_date_time
			from (
				select @rownum:=0, id, title, content, filepath, blogger, reg_date_time
				from blog
				order by reg_date_time desc
			) as B
		) as A
		where rnum between #{startRow} and #{endRow}
		]]>
	</select>
	
	<select id="searchList" resultType="iducs.spring.blog202012703.domain.Blog">
		<![CDATA[
		select *
		from (
			select @rownum:=@rownum+1 as rnum, id, title, content, filepath, blogger, reg_date_time
			from (
				select @rownum:=0, id, title, content, filepath, blogger, reg_date_time
				from blog
				where title LIKE CONCAT('%', #{keyword}, '%')
				order by reg_date_time desc
			) as B
		) as A
		where rnum between #{startRow} and #{endRow}
		]]>
	</select>
	
	<update id="update">
		update blog 
		set title=#{title}, 
		content=#{content}, 
		filepath=#{filepath}, 
		blogger=#{blogger}, 
		reg_date_time=#{regDateTime} 
		where id=#{id}
	</update>
	
	<delete id="delete">
		delete 
		from blog 
		where id=#{id}
	</delete>
</mapper>